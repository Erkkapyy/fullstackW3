{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/Persons.js","App.js","serviceWorker.js","index.js"],"names":["PersonForm","_ref","addPerson","newName","handleNameChange","newNumber","handleNumberChange","react_default","a","createElement","Fragment","onSubmit","value","onChange","type","Persons","personsToShow","deletePerson","map","person","key","name","number","onClick","id","Filter","handleShowChange","baseUrl","services_Persons","newObject","axios","post","put","concat","catch","error","console","log","delete","Notification","_ref2","message","className","Error","_ref3","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","newShow","setNewShow","_useState9","_useState10","successMessage","setSuccessMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","get","then","response","data","filter","toLowerCase","includes","App_Notification","App_Error","components_Filter","event","target","components_PersonForm","preventDefault","uusi","indexOf","contains","forEach","item","index","array","containsPerson","window","confirm","newPerson","personService","setTimeout","personObject","length","components_Persons","copy","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24a33da0.chunk.js","sourcesContent":["import React from \"react\"\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange\n}) => {\n  return (\n    <>\n      <form onSubmit={addPerson}>\n        <div>\n          nimi: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          numero: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default PersonForm\n","import React from \"react\"\n\nconst Persons = ({ personsToShow, deletePerson }) =>\n  personsToShow.map(person => (\n    <li key={person.name}>\n      {person.name} {person.number}\n      <button\n        onClick={() => deletePerson({ id: person.id, name: person.name })}\n      >\n        poista\n      </button>\n    </li>\n  ))\n\nexport default Persons\n","import React from \"react\"\n\nconst Filter = ({ handleShowChange }) => {\n  return (\n    <form onChange={handleShowChange}>\n      <div>\n        rajaa näytettäviä <input />\n      </div>\n    </form>\n  )\n}\n\nexport default Filter\n","import axios from \"axios\"\nconst baseUrl = \"http://localhost:3001/persons\"\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = ({ id, newObject }) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).catch(error => {\n    console.log(\"fail boi\")\n  })\n}\n\nconst del = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  delete: del\n}\n","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from \"./components/Persons\"\nimport Filter from \"./components/Filter\"\nimport personService from \"./services/Persons\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: \"Arto Hellas\", number: \"040-123456\" },\n    { name: \"Martti Tienari\", number: \"040-123456\" },\n    { name: \"Arto Järvinen\", number: \"040-123456\" },\n    { name: \"Lea Kutvonen\", number: \"040-123456\" }\n  ])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [newShow, setNewShow] = useState(\"\")\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  useEffect(() => {\n    console.log(\"effect\")\n    axios.get(\"http://localhost:3001/persons\").then(response => {\n      console.log(\"promise fulfilled\")\n      setPersons(response.data)\n    })\n  }, [])\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(newShow)\n  )\n\n  const handleNameChange = event => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleShowChange = event => {\n    console.log(event.target.value)\n    setNewShow(event.target.value)\n  }\n\n  const containsPerson = () => {\n    let contains = false\n\n    persons.forEach(function(item, index, array) {\n      console.log(newName, \"verrattava1\")\n      console.log(item.name, \"verrattava2\")\n      if (item.name === newName) {\n        contains = true\n      }\n    })\n    return contains\n  }\n\n  const addPerson = event => {\n    event.preventDefault()\n\n    const uusi = {\n      name: newName,\n      number: newNumber\n    }\n    console.log(uusi)\n    console.log(persons)\n    console.log(persons.indexOf(uusi))\n\n    if (containsPerson()) {\n      if (\n        window.confirm(\n          `${uusi.name} on jo luettelossa, korvataanko vanha numero uudella?`\n        )\n      ) {\n        let newPerson = {}\n        persons.map(person => {\n          if (person.name === uusi.name) {\n            newPerson = {\n              name: person.name,\n              number: newNumber,\n              id: person.id\n            }\n          }\n          return newPerson\n        })\n        console.log(\"newPerson!!! \", newPerson.id)\n\n        personService\n          .update({ id: newPerson.id, newObject: newPerson })\n          .then(response => {\n            setPersons(\n              persons\n                .filter(person => person.id !== newPerson.id)\n                .concat(response.data)\n            )\n          })\n          .catch(error => {\n            if (!error) {\n              setSuccessMessage(\"Numero vaihdettu onnistuneesti\")\n              setTimeout(() => {\n                setSuccessMessage(null)\n              }, 5000)\n            } else {\n              setErrorMessage(\n                `Henkilö '${newPerson.name}' oli jo poistettu palvelimelta`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n            }\n            setPersons(persons.filter(person => person.id !== newPerson.id))\n          })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1\n      }\n      personService.create(personObject).then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName(\"\")\n      })\n      setSuccessMessage(\"Henkilö lisätty onnistuneesti\")\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 5000)\n    }\n\n    console.log(persons)\n  }\n\n  const deletePerson = ({ id, name }) => {\n    console.log(\"nappi bainettu :D\")\n    console.log(\"pärkkälä \", { name, id })\n\n    if (window.confirm(`Poistetaanko ${name}?`)) {\n      personService.delete(id)\n    }\n    const copy = persons.filter(person => person.id !== id)\n    setPersons(copy)\n    setSuccessMessage(\"Henkilö poistettu onnistuneesti\")\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={successMessage} />\n      <Error message={errorMessage} />\n      <Filter handleShowChange={handleShowChange} />\n      <h3>Lisää uusi</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numerot</h2>\n      <ul>\n        <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n      </ul>\n    </div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"success\">{message}</div>\n}\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}